{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","width","container","overflowX","validate","values","console","log","errors","latitude","isNaN","test","longitude","Math","abs","App","useState","dataarr","setDatarr","classes","print","setPrint","handlechange","a","sleep","ms","Promise","resolve","setTimeout","printChart","input","document","getElementById","html2canvas","then","canvas","imgHeight","height","imgData","toDataURL","pdf","jsPDF","addImage","save","onSubmit","year","Date","getFullYear","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","navigator","geolocation","getCurrentPosition","position","coords","url","fetch","res","json","data","now","start","diff","getTimezoneOffset","actual","floor","times","slice","length","catch","err","alert","error","useEffect","style","padding","margin","maxWidth","CssBaseline","Typography","variant","align","component","gutterBottom","paragraph","Link","href","Box","fontWeight","initialValues","ExampleLatitude","ExampleLongitude","render","handleSubmit","submitting","onChange","reset","pristine","Paper","Grid","alignItems","spacing","item","xs","fullWidth","required","name","TextField","type","label","event","marginTop","Button","color","disabled","onClick","className","TableContainer","id","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","TableBody","map","row","day","substring","scope","fajr","sunrise","dhuhr","asr_h","maghrib","isha","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.b8e41c21.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { TextField, Checkbox, Radio, Select } from 'final-form-material-ui';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  Box,\r\n  CssBaseline,\r\n  RadioGroup,\r\n  FormLabel,\r\n  MenuItem,\r\n  FormGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport jsPDF from 'jspdf';  \r\nimport html2canvas from 'html2canvas';  \r\n\r\nconst useStyles = makeStyles({\r\n\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    overflowX: \"initial\",\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\nconst validate = values => {\r\n  console.log(\"values \", values);\r\n\r\n  const errors = {};\r\n /* if (!values.latitude) {\r\n    errors.latitude = 'Required';\r\n  } */\r\n  if(!values.latitude || isNaN(values.latitude) || !/^\\d*\\.?\\d*$/g.test(values.latitude) ){\r\n   console.log(values.latitude);\r\n    errors.latitude = 'Wrong Format for example 37.983933'\r\n  }\r\n  if(!values.longitude || isNaN(values.longitude) || !/^\\d*\\.?\\d*$/g.test(Math.abs(values.longitude))){\r\n    errors.longitude = 'Wrong Format for example -87.596989'\r\n  }\r\n  /*if (!values.longitude) {\r\n    errors.longitude = 'Required';\r\n  } */\r\n  \r\n  return errors;\r\n};\r\n\r\nfunction App() {\r\n  const [dataarr, setDatarr] = useState([]);\r\n  const classes = useStyles(); \r\n  const [print, setPrint] = useState(true);\r\n  const handlechange =  async values =>{\r\n    const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n    await sleep(300);\r\n    console.log(\"values in handlechange: \", values); \r\n  \r\n   \r\n  }\r\n  function printChart() {\r\n    const input = document.getElementById('prayerchart'); \r\n    //ref: https://morioh.com/p/2580cfbcefd5\r\n    html2canvas(input)\r\n      .then((canvas) =>{\r\n        var imgWidth = 200;  \r\n        var pageHeight = 290;  \r\n        var imgHeight = canvas.height * imgWidth / canvas.width;  \r\n        console.log(\"imgHeight \", imgHeight);\r\n        var heightLeft = imgHeight;  \r\n        const imgData = canvas.toDataURL('image/png');  \r\n        const pdf = new jsPDF('p', 'mm', 'a4')  \r\n        var position = 0;  \r\n        var heightLeft = imgHeight;  \r\n        pdf.addImage(imgData, 'JPEG', 0, position, imgWidth, imgHeight);  \r\n        pdf.save(\"prayerchart.pdf\");  \r\n      })\r\n    \r\n  }\r\n  const onSubmit = async values => {\r\n    const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\r\n    await sleep(300);\r\n    const year = new Date().getFullYear(); \r\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone; \r\n    const method = 0; \r\n    const both = false; \r\n    const time = 1; \r\n    navigator.geolocation.getCurrentPosition(function(position) {\r\n      console.log(\"Latitude is :\", position.coords.latitude);\r\n      console.log(\"Longitude is :\", position.coords.longitude);\r\n      const url = 'https://www.moonsighting.com/time_json.php?year=' + year + '&tz=' + timezone +'&lat=' + position.coords.latitude + '&lon=' + position.coords.longitude + '&method=' + method + '&both=' + both + '&time=' + time\r\n  \r\n      fetch(url, {\r\n       \r\n      })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"data\", data);\r\n        var now = new Date();\r\n        var start = new Date(now.getFullYear(), 0, 0);\r\n        var diff = (now - start) + ((start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000);\r\n        var oneDay = 1000 * 60 * 60 * 24;\r\n        var day = Math.floor(diff / oneDay);\r\n        var actual = day - 1; \r\n        console.log('Day of year: ' + actual);\r\n         setDatarr(data.times.slice(actual,data.times.length));\r\n      })\r\n      .catch((err) => {\r\n        alert(\"Prayer times could not be fetched.\");\r\n        console.log(err);\r\n      });\r\n    \r\n    },\r\n    function(error) {\r\n     const latitude = values.latitude;\r\n     const longitude = values.longitude; \r\n     const url = 'https://www.moonsighting.com/time_json.php?year=' + year + '&tz=' + timezone +'&lat=' + latitude + '&lon=' + longitude + '&method=' + method + '&both=' + both + '&time=' + time\r\n\r\n     fetch(url, {\r\n       \r\n    })\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      console.log(\"data\", data);\r\n      var now = new Date();\r\n      var start = new Date(now.getFullYear(), 0, 0);\r\n      var diff = (now - start) + ((start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000);\r\n      var oneDay = 1000 * 60 * 60 * 24;\r\n      var day = Math.floor(diff / oneDay);\r\n      var actual = day - 1; \r\n      console.log('Day of year: ' + actual);\r\n       setDatarr(data.times.slice(actual,data.times.length));\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      alert(\"Prayer times could not be fetched.\");\r\n    });\r\n\r\n    }\r\n     );\r\n  \r\n  };\r\n  useEffect(() => {\r\n    console.log(\"dataarr \", dataarr);\r\n    //loading here as this does it once\r\n    //second array makes it simulate component did mount\r\n     if(dataarr.length > 10){\r\n      setPrint(false); \r\n\r\n     }\r\n  }, [dataarr]);\r\n  useEffect(() => {\r\n    const year = new Date().getFullYear(); \r\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone; \r\n    const method = 0; \r\n    const both = false; \r\n    const time = 1; \r\n    navigator.geolocation.getCurrentPosition(function(position) {\r\n      console.log(\"Latitude is :\", position.coords.latitude);\r\n      console.log(\"Longitude is :\", position.coords.longitude);\r\n      const url = 'https://www.moonsighting.com/time_json.php?year=' + year + '&tz=' + timezone +'&lat=' + position.coords.latitude + '&lon=' + position.coords.longitude + '&method=' + method + '&both=' + both + '&time=' + time\r\n  \r\n      fetch(url, {\r\n       \r\n      })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n      \r\n       var now = new Date();\r\n       var start = new Date(now.getFullYear(), 0, 0);\r\n       var diff = (now - start) + ((start.getTimezoneOffset() - now.getTimezoneOffset()) * 60 * 1000);\r\n       var oneDay = 1000 * 60 * 60 * 24;\r\n       var day = Math.floor(diff / oneDay);\r\n       var actual = day - 1; \r\n       console.log('Day of year: ' + actual);\r\n        setDatarr(data.times.slice(actual,data.times.length));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    \r\n    },\r\n    function(error) {\r\n     alert(\"Error! No location provided Please Enter Latitude and Longitude on the form \")\r\n    }\r\n    \r\n    \r\n    );\r\n  }, []);\r\n  return (\r\n    <div style={{ padding: 16, margin: 'auto', maxWidth: 600 }}>\r\n      <CssBaseline />\r\n      <Typography variant=\"h4\" align=\"center\" component=\"h1\" gutterBottom>\r\n        Prayer Times\r\n      </Typography>\r\n  \r\n      <Typography paragraph>\r\n        To generate prayer times this app needs your latitude and longitude. If you have enabled location tracking this will happen automatically.\r\n        User Location is not stored anywhere on website please consider enabling. \r\n        Otherwise use the following links: {' '}\r\n        <Link href=\"https://support.google.com/maps/answer/18539?co=GENIE.Platform%3DDesktop&hl=en\">\r\n         How to get Latitude and longitude from Google Maps.\r\n        </Link>\r\n        Or you can use         <Link href=\"https://www.latlong.net/\">\r\n         this.\r\n        </Link>{' '}\r\n         Enter your desired Latitude and Longitude to get Prayer Times from this {' '}\r\n        <Link href=\"https://github.com/PrayerTimeResearch/PrayerTimeAPI\">\r\n          API.\r\n        </Link>{' '}\r\n        Please Note: prayer times will vary depending on your location.  \r\n \r\n      </Typography>\r\n      <Typography>\r\n        <Box fontWeight=\"fontWeightBold\">\r\n        Disclaimer: Please use caution. This is in active development. </Box> </Typography>\r\n        <Typography> Please report any bugs to ahmedek2786@gmail.com </Typography>\r\n\r\n        <Typography> Coming Soon: Ability to print monthly prayer charts </Typography>\r\n      <Form\r\n        onSubmit={onSubmit}\r\n        initialValues={{ ExampleLatitude: '37.97441011798584' , ExampleLongitude: ' -87.4315543621677' }}\r\n        validate={validate}\r\n        render={({ handleSubmit, onChange, reset, submitting, pristine, values }) => (\r\n          <form onSubmit={handleSubmit}>\r\n            <Paper style={{ padding: 16 }}>\r\n              <Grid container alignItems=\"flex-start\" spacing={2}>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"latitude\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Latitude\"\r\n                    onChange={(event) => handlechange(event)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Field\r\n                    fullWidth\r\n                    required\r\n                    name=\"longitude\"\r\n                    component={TextField}\r\n                    type=\"text\"\r\n                    label=\"Longitude\"\r\n                    onChange={(event) => handlechange(event)}\r\n                  />\r\n                </Grid>\r\n               \r\n            \r\n               {/*disabled = (reset) {submitting || pristine} */}\r\n              {/*disabled = (submit) {submitting}*/}\r\n            \r\n            \r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    disabled={submitting}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item style={{ marginTop: 16 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    onClick={printChart}\r\n                    disabled={print}\r\n                  >\r\n                   Prints 9 Days of Prayers (Only works on laptop/desktop)\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n           {/*     <pre>{JSON.stringify(values, 0, 2)}</pre>*/}\r\n           <Paper className={classes.root}>\r\n            <TableContainer id=\"prayerchart\" className={classes.container}>\r\n            <Typography>Data from moonsighting.com and generated by ahmedshahzad.com</Typography>\r\n\r\n           <Table stickyHeader   aria-label=\"sticky table\">\r\n             <TableHead>\r\n            \r\n              \r\n               <TableRow>\r\n                 <TableCell>Date</TableCell>\r\n                 <TableCell>Day</TableCell>\r\n                 <TableCell align=\"right\">Fajr</TableCell>\r\n                 <TableCell align=\"right\">Sunrise</TableCell>\r\n                 <TableCell align=\"right\">Zhur</TableCell>\r\n                 <TableCell align=\"right\">Asr</TableCell>\r\n                 <TableCell align=\"right\">Maghrib</TableCell>\r\n                 <TableCell align=\"right\">Isha</TableCell>\r\n               </TableRow>\r\n             </TableHead>\r\n             <TableBody>\r\n               {dataarr.map((row) => (\r\n                 <TableRow key={row.day}>\r\n                  <TableCell align=\"right\"> {row.day.substring(0,row.day.length - 3)} </TableCell>\r\n\r\n                   <TableCell component=\"th\" scope=\"row\">\r\n                     {row.day.substring(row.day.length - 3,row.day.length)}\r\n                   </TableCell>\r\n                   <TableCell align=\"right\">{row.times.fajr}</TableCell>\r\n                   <TableCell align=\"right\">{row.times.sunrise}</TableCell>\r\n                   <TableCell align=\"right\">{row.times.dhuhr}</TableCell>\r\n                   <TableCell align=\"right\">{row.times.asr_h}</TableCell>\r\n                   <TableCell align=\"right\">{row.times.maghrib}</TableCell>\r\n                   <TableCell align=\"right\">{row.times.isha}</TableCell>\r\n\r\n                 </TableRow>\r\n               ))}\r\n             </TableBody>\r\n           </Table>\r\n\r\n         </TableContainer>\r\n         </Paper>\r\n          </form>\r\n        \r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}